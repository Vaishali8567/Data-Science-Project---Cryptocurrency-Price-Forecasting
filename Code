import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.preprocessing import MinMaxScaler
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, mean_absolute_error
import pandas_ta as ta  
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, GRU, Dense

# Load the dataset
file_path = 'C:\\Users\\vaish\\OneDrive\\UH\\Project\\bitcoin-historical-data.csv'
df = pd.read_csv(file_path)

# Preprocessing
df['Timestamp'] = pd.to_datetime(df['Timestamp'], errors='coerce')  # Convert 'Timestamp' to datetime
df = df.set_index('Timestamp')  # Set 'Timestamp' as the index

# Calculate Market Indicators

# 1. Moving Averages
df['SMA_30'] = df['Close'].rolling(window=30).mean()  # 30-day Simple Moving Average
df['EMA_30'] = df['Close'].ewm(span=30, adjust=False).mean()  # 30-day Exponential Moving Average

# 2. Relative Strength Index (RSI)
df['RSI'] = df.ta.rsi(length=14) # 14-period RSI

# 3. Bollinger Bands
bb = df.ta.bbands(length=20, std=2)

# Assign the individual bands to the DataFrame
df['BB_lower'] = bb['BBL_20_2.0']  # Lower Bollinger Band
df['BB_middle'] = bb['BBM_20_2.0']  # Middle Bollinger Band
df['BB_upper'] = bb['BBU_20_2.0']  # Upper Bollinger Band

# Drop any NaN values
df.dropna(inplace=True)
